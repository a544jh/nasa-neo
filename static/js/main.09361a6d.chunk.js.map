{"version":3,"sources":["../node_modules/react-semantic-ui-datepickers/dist/locales sync /^/.//.*/.json$","NeoApi.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","neoSortKeyGetters","distance","neo","Number","close_approach_data","miss_distance","lunar","diameter","estimated_diameter","meters","estimated_diameter_max","name","date","epoch_date_close_approach","parseISO","close_approach_date","getTime","startDate","endDate","a","startDateStr","formatISO","representation","endDateStr","storedApiKey","window","localStorage","getItem","apiKey","url","fetch","response","status","json","data","flattenResponse","resp","flattened","near_earth_objects","neos","push","App","useState","isLoading","setLoading","setNeos","startOfToday","setStartDate","add","days","setEndDate","daysDifference","differenceInCalendarDays","sortKey","setSortKey","sortDirection","setSortDirection","hasError","setError","useEffect","refreshNeos","fetchNeos","then","_","orderBy","catch","error","SortHeaderCell","props","Table","HeaderCell","sorted","column","undefined","onClick","newSortKey","newSortDirection","onSort","children","maxDiameterNeo","maxBy","maxDiameter","maxDistanceNeo","maxDistance","PaginationMenu","daysAmountText","Menu","compact","Item","newStartDate","sub","newEndDate","Icon","Container","style","paddingTop","paddingBottom","Header","as","Form","Group","inline","label","onChange","event","value","Date","filterDate","maxEndDate","Button","Message","Dimmer","Dimmable","blurring","active","verticalAlign","Loader","celled","sortable","fixed","marginBottom","Row","Body","key","negative","is_potentially_hazardous_asteroid","Cell","close_approach_date_full","href","nasa_jpl_url","target","rel","estimated_diameter_min","toFixed","Progress","total","size","margin","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.09361a6d.chunk.js","sourcesContent":["var map = {\n\t\"./bg-BG.json\": 328,\n\t\"./ca-ES.json\": 329,\n\t\"./cs-CZ.json\": 330,\n\t\"./de-DE.json\": 331,\n\t\"./en-US.json\": 171,\n\t\"./es-ES.json\": 332,\n\t\"./et-EE.json\": 333,\n\t\"./fi-FI.json\": 334,\n\t\"./fr-FR.json\": 335,\n\t\"./he-IL.json\": 336,\n\t\"./it-IT.json\": 337,\n\t\"./ja-JP.json\": 338,\n\t\"./nb-NO.json\": 339,\n\t\"./pl-PL.json\": 340,\n\t\"./pt-BR.json\": 341,\n\t\"./ru-RU.json\": 342,\n\t\"./sv-SE.json\": 343,\n\t\"./tr-TR.json\": 344,\n\t\"./zh-CN.json\": 345\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 327;","import { formatISO, parseISO } from \"date-fns\";\n\ninterface NeoApiResponse {\n  near_earth_objects: NeoDates;\n}\n\ninterface NeoDates {\n  [date: string]: NearEarthObject[];\n}\n\nexport interface NearEarthObject {\n  id: string;\n  name: string;\n  nasa_jpl_url: string;\n  close_approach_data: CloseApproachData[];\n  estimated_diameter: {\n    kilometers: EstimatedDiameter;\n    meters: EstimatedDiameter;\n    miles: EstimatedDiameter;\n    feet: EstimatedDiameter;\n  };\n  is_potentially_hazardous_asteroid: boolean;\n  is_sentry_object: boolean;\n}\n\ninterface CloseApproachData {\n  close_approach_date: string;\n  close_approach_date_full: string | null;\n  epoch_date_close_approach: string | null;\n  relative_velocity: {\n    kilometers_per_second: string;\n    kilometers_per_hour: string;\n    miles_per_hour: string;\n  };\n  miss_distance: {\n    astronomical: string;\n    lunar: string;\n    kilometers: string;\n    miles: string;\n  };\n  orbiting_body: string;\n}\n\ninterface EstimatedDiameter {\n  estimated_diameter_min: number;\n  estimated_diameter_max: number;\n}\n\nexport type NeoSortKey = keyof typeof neoSortKeyGetters;\n\nexport const neoSortKeyGetters = {\n  distance: (neo: NearEarthObject) =>\n    Number(neo.close_approach_data[0].miss_distance.lunar),\n  diameter: (neo: NearEarthObject) =>\n    neo.estimated_diameter.meters.estimated_diameter_max,\n  name: (neo: NearEarthObject) => neo.name,\n  date: (neo: NearEarthObject): number => {\n    if (neo.close_approach_data[0].epoch_date_close_approach !== null) {\n      return Number(neo.close_approach_data[0].epoch_date_close_approach);\n    }\n    return parseISO(\n      neo.close_approach_data[0].close_approach_date + \"T00:00Z\"\n    ).getTime();\n  },\n};\n\nexport async function fetchNeos(\n  startDate: Date,\n  endDate: Date\n): Promise<NearEarthObject[]> {\n  const startDateStr = formatISO(startDate, { representation: \"date\" });\n  const endDateStr = formatISO(endDate, { representation: \"date\" });\n  const storedApiKey = window.localStorage.getItem(\"nasaApiKey\");\n  const apiKey = storedApiKey === null ? \"DEMO_KEY\" : storedApiKey;\n\n  const url = `https://api.nasa.gov/neo/rest/v1/feed?start_date=${startDateStr}&end_date=${endDateStr}&api_key=${apiKey}`;\n  const response = await fetch(url);\n  if (response.status !== 200) {\n    throw new Error(\"Failed to fetch NEOs\");\n  }\n  const data = await response.json();\n  return flattenResponse(data);\n}\n\nfunction flattenResponse(resp: NeoApiResponse): NearEarthObject[] {\n  let flattened = [];\n  for (let date in resp.near_earth_objects) {\n    let neos = resp.near_earth_objects[date];\n    flattened.push(...neos);\n  }\n  return flattened;\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Container,\n  Header,\n  Table,\n  Form,\n  Dimmer,\n  Loader,\n  Icon,\n  Progress,\n  Message,\n  Menu,\n} from \"semantic-ui-react\";\nimport \"./App.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\nimport \"react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css\";\nimport {\n  fetchNeos,\n  NearEarthObject,\n  neoSortKeyGetters,\n  NeoSortKey,\n} from \"./NeoApi\";\nimport { add, startOfToday, differenceInCalendarDays, sub } from \"date-fns\";\nimport { SemanticDatepickerProps } from \"react-semantic-ui-datepickers/dist/types\";\nimport _ from \"lodash\";\n\nfunction App() {\n  const [isLoading, setLoading] = useState(false);\n  const [neos, setNeos] = useState<NearEarthObject[]>([]);\n  const [startDate, setStartDate] = useState<Date>(() => startOfToday());\n  const [endDate, setEndDate] = useState<Date>(() =>\n    add(startOfToday(), { days: 7 })\n  );\n  const daysDifference = differenceInCalendarDays(endDate, startDate);\n  const [sortKey, setSortKey] = useState<NeoSortKey>(\"date\");\n  type SortDirection = \"ascending\" | \"descending\";\n  const [sortDirection, setSortDirection] = useState<SortDirection>(\n    \"ascending\"\n  );\n  const [hasError, setError] = useState(false);\n\n  useEffect(() => {\n    refreshNeos(startDate, endDate, sortKey, sortDirection);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // Fetch neos on initial render\n\n  const refreshNeos = (\n    startDate: Date,\n    endDate: Date,\n    sortKey: NeoSortKey,\n    sortDirection: SortDirection\n  ) => {\n    setLoading(true);\n    fetchNeos(startDate, endDate)\n      .then((neos) => {\n        setNeos(\n          _.orderBy(\n            neos,\n            neoSortKeyGetters[sortKey],\n            sortDirection === \"ascending\" ? \"asc\" : \"desc\"\n          )\n        );\n        setLoading(false);\n        setError(false);\n      })\n      .catch((error) => {\n        setNeos([]);\n        setError(true);\n        setLoading(false);\n      });\n  };\n\n  const onChangeStartDate = (\n    event: React.SyntheticEvent | undefined,\n    data: SemanticDatepickerProps\n  ) => {\n    const date = data.value;\n    if (date instanceof Date) {\n      setStartDate(date);\n      setEndDate(add(date, { days: daysDifference }));\n    }\n  };\n\n  const onChangeEndDate = (\n    event: React.SyntheticEvent | undefined,\n    data: SemanticDatepickerProps\n  ) => {\n    const date = data.value;\n    if (date instanceof Date) {\n      setEndDate(date);\n    }\n  };\n\n  const endDateSelectable = (date: Date): boolean => {\n    const maxEndDate = add(startDate, { days: 7 });\n    return date >= startDate && date <= maxEndDate;\n  };\n\n  const onSort = (newSortKey: NeoSortKey) => {\n    let newSortDirection: SortDirection;\n    if (newSortKey === sortKey) {\n      newSortDirection =\n        sortDirection === \"ascending\" ? \"descending\" : \"ascending\";\n    } else {\n      newSortDirection = \"ascending\";\n    }\n    setSortKey(newSortKey);\n    setSortDirection(newSortDirection);\n    setNeos(\n      _.orderBy(\n        neos,\n        neoSortKeyGetters[newSortKey],\n        newSortDirection === \"ascending\" ? \"asc\" : \"desc\"\n      )\n    );\n  };\n\n  const SortHeaderCell: React.FC<{ column: NeoSortKey }> = (props) => (\n    <Table.HeaderCell\n      sorted={props.column === sortKey ? sortDirection : undefined}\n      onClick={() => onSort(props.column)}\n    >\n      {props.children}\n    </Table.HeaderCell>\n  );\n\n  const maxDiameterNeo = _.maxBy(\n    neos,\n    (neo) => neo.estimated_diameter.meters.estimated_diameter_max\n  );\n  const maxDiameter =\n    maxDiameterNeo?.estimated_diameter.meters.estimated_diameter_max;\n\n  const maxDistanceNeo = _.maxBy(\n    neos,\n    (neo) => neo.close_approach_data[0].miss_distance.lunar\n  );\n  const maxDistance =\n    maxDistanceNeo?.close_approach_data[0].miss_distance.lunar;\n\n  const PaginationMenu = () => {\n    let daysAmountText: string;\n    if (daysDifference + 1 > 1) {\n      daysAmountText = `${daysDifference + 1} days`;\n    } else {\n      daysAmountText = \"day\";\n    }\n\n    return (\n      <Menu compact>\n        <Menu.Item\n          onClick={() => {\n            const newStartDate = sub(startDate, { days: daysDifference + 1 });\n            setStartDate(newStartDate);\n            const newEndDate = sub(endDate, { days: daysDifference + 1 });\n            setEndDate(newEndDate);\n            refreshNeos(newStartDate, newEndDate, sortKey, sortDirection);\n          }}\n        >\n          <Icon name=\"chevron left\" />\n          Previous {daysAmountText}\n        </Menu.Item>\n        <Menu.Item\n          onClick={() => {\n            const newStartDate = add(startDate, { days: daysDifference + 1 });\n            setStartDate(newStartDate);\n            const newEndDate = add(endDate, { days: daysDifference + 1 });\n            setEndDate(newEndDate);\n            refreshNeos(newStartDate, newEndDate, sortKey, sortDirection);\n          }}\n        >\n          Next {daysAmountText} <Icon name=\"chevron right\" />\n        </Menu.Item>\n      </Menu>\n    );\n  };\n\n  return (\n    <Container style={{ paddingTop: \"1rem\", paddingBottom: \"1rem\" }}>\n      <Header as=\"h1\">Near Earth Objects</Header>\n      <Form>\n        <Form.Group inline>\n          <SemanticDatepicker\n            label=\"Start date\"\n            onChange={onChangeStartDate}\n            value={startDate}\n          />\n          <SemanticDatepicker\n            label=\"End date\"\n            onChange={onChangeEndDate}\n            value={endDate}\n            filterDate={endDateSelectable}\n          />\n          <Form.Button\n            onClick={() =>\n              refreshNeos(startDate, endDate, sortKey, sortDirection)\n            }\n          >\n            <Icon name=\"search\" /> Search\n          </Form.Button>\n        </Form.Group>\n      </Form>\n\n      <PaginationMenu />\n\n      {hasError ? (\n        <Message error>\n          <Message.Header>Oops, something went wrong!</Message.Header>\n          <p>Maybe you want to try again later</p>\n        </Message>\n      ) : null}\n\n      <Dimmer.Dimmable blurring>\n        <Dimmer active={isLoading} verticalAlign=\"top\">\n          <Loader />\n        </Dimmer>\n        <Table celled sortable fixed style={{ marginBottom: \"1rem\" }}>\n          <Table.Header>\n            <Table.Row>\n              <SortHeaderCell column=\"date\">Date</SortHeaderCell>\n              <SortHeaderCell column=\"date\">Time (UTC)</SortHeaderCell>\n              <SortHeaderCell column=\"name\">Name</SortHeaderCell>\n              <SortHeaderCell column=\"diameter\">Diameter</SortHeaderCell>\n              <SortHeaderCell column=\"distance\">Miss Distance</SortHeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {neos.map((neo) => (\n              <Table.Row\n                key={neo.id}\n                negative={neo.is_potentially_hazardous_asteroid}\n              >\n                <Table.Cell>\n                  {neo.close_approach_data[0].close_approach_date}\n                </Table.Cell>\n                <Table.Cell>\n                  {neo.close_approach_data[0].close_approach_date_full}\n                </Table.Cell>\n                <Table.Cell>\n                  <a\n                    href={neo.nasa_jpl_url}\n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\"\n                  >\n                    {neo.name}\n                  </a>\n                </Table.Cell>\n                <Table.Cell>\n                  {neo.estimated_diameter.meters.estimated_diameter_min.toFixed(\n                    1\n                  )}\n                  {\" m - \"}\n                  {neo.estimated_diameter.meters.estimated_diameter_max.toFixed(\n                    1\n                  )}\n                  {\" m\"}\n                  <Progress\n                    value={neo.estimated_diameter.meters.estimated_diameter_max}\n                    total={maxDiameter}\n                    size=\"tiny\"\n                    style={{ margin: 0 }}\n                  />\n                </Table.Cell>\n                <Table.Cell>\n                  {Number(\n                    neo.close_approach_data[0].miss_distance.lunar\n                  ).toFixed(2)}\n                  {\" LD\"}\n                  <Progress\n                    value={neo.close_approach_data[0].miss_distance.lunar}\n                    total={maxDistance}\n                    size=\"tiny\"\n                    style={{ margin: 0 }}\n                  />\n                </Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Dimmer.Dimmable>\n\n      <PaginationMenu />\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}